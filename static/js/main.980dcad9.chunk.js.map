{"version":3,"sources":["App.js","index.js"],"names":["Line","Formula","formula","this","props","nextProps","nextState","React","Component","App","state","text","formulas","activeIndex","handleChange","bind","handleClick","event","setState","target","value","split","titleProps","index","newIndex","className","Container","Segment","basic","clearing","textAlign","Button","color","as","href","floated","Image","src","process","avatar","centered","Icon","name","Accordion","fluid","styled","Title","active","onClick","Content","Form","TextArea","rows","placeholder","onChange","Provider","map","list","ReactDOM","render","document","getElementById"],"mappings":"+UAMMA,G,8KAEF,OACE,cAAC,IAAQC,QAAT,CAAiBC,QAAU,MAAQC,KAAKC,MAAMF,QAAU,U,4CAItCG,EAAWC,GAE/B,OAAOH,KAAKC,MAAMF,UAAYG,EAAUH,Y,GATzBK,IAAMC,YA4FVC,E,kDA9Eb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAEDM,MAAQ,CACXC,KAAM,GACNC,SAAU,GACVC,YAAa,GAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVF,E,yDAcNE,GACXd,KAAKe,SAAS,CAAEP,KAAMM,EAAME,OAAOC,QACnCjB,KAAKe,SAAS,CAAEN,SAAUK,EAAME,OAAOC,MAAMC,MAAM,e,kCAGzCJ,EAAOK,GAAa,IACtBC,EAAUD,EAAVC,MACFC,EAAWrB,KAAKO,MAAMG,cAAgBU,GAAS,EAAIA,EAEzDpB,KAAKe,SAAS,CAAEL,YAAaW,M,+BAI7B,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWf,MAAI,EAAf,UACE,eAACgB,EAAA,EAAD,CAASC,OAAK,EAACC,UAAQ,EAACC,UAAU,SAAlC,UACE,eAACC,EAAA,EAAD,CAAQC,MAAM,QAAQC,GAAG,IAAIC,KAAK,gCAAgCC,QAAQ,OAA1E,UACE,cAACC,EAAA,EAAD,CAAOC,IAAKC,uBAAyCC,QAAM,IAD7D,gBAIA,cAACH,EAAA,EAAD,CAAOC,IAAKC,uBAAyCE,UAAQ,IAC7D,eAACT,EAAA,EAAD,CAAQE,GAAG,IAAIC,KAAK,wCAAwCC,QAAQ,QAApE,UACE,cAACM,EAAA,EAAD,CAAMC,KAAK,WADb,yBAIF,eAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,QAAM,EAAvB,UACE,eAACF,EAAA,EAAUG,MAAX,CAAiBC,OAAmC,IAA3B5C,KAAKO,MAAMG,YAAmBU,MAAO,EAAGyB,QAAS7C,KAAKa,YAA/E,UACE,cAACyB,EAAA,EAAD,CAAMC,KAAK,aADb,aAIA,cAACC,EAAA,EAAUM,QAAX,CAAmBF,OAAmC,IAA3B5C,KAAKO,MAAMG,YAAtC,SACE,odASJ,cAACc,EAAA,EAAD,UACE,cAACuB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAM,EACNC,YAAY,kBACZjC,MAAOjB,KAAKO,MAAMC,KAClB2C,SAAUnD,KAAKW,mBAIrB,cAACa,EAAA,EAAD,UACE,cAAC,IAAQ4B,SAAT,UACGpD,KAAKO,MAAME,SAAS4C,KAAI,SAASC,EAAMlC,GACtC,OAAO,cAAC,EAAD,CAA2BrB,QAASuD,GAAzBA,EAAK,IAAIlC,mB,GArEzBhB,IAAMC,WCbxBkD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.980dcad9.chunk.js","sourcesContent":["import React from 'react';\nimport MathJax from 'mathjax3-react';\nimport { Container, Segment, Form, TextArea, Icon, Image, Button, Accordion } from 'semantic-ui-react';\nimport './App.css';\n\n// dynamically create lines to make multi-line equations\nclass Line extends React.Component {\n  render () {\n    return (\n      <MathJax.Formula formula={ \"$$ \" + this.props.formula + \" $$\"} />\n    )\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // improve rendering speed by not re-rendering needlessly\n    return this.props.formula !== nextProps.formula;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      formulas: [],\n      activeIndex: 0,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // update LaTeX in a controlled component\n  handleChange(event) {\n    this.setState({ text: event.target.value });\n    this.setState({ formulas: event.target.value.split(/(?:\\n)/g) });\n  }\n\n  handleClick(event, titleProps) {\n    const { index } = titleProps;\n    const newIndex = this.state.activeIndex === index ? -1 : index;\n\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container text>\n          <Segment basic clearing textAlign=\"center\">\n            <Button color=\"black\" as=\"a\" href=\"https://mchartigan.github.io/\" floated=\"left\">\n              <Image src={process.env.PUBLIC_URL + '/favicon.ico'} avatar/>\n              Go to Home\n            </Button>\n            <Image src={process.env.PUBLIC_URL + '/livetex.png'} centered/>\n            <Button as=\"a\" href=\"https://github.com/mchartigan/LiveTeX\" floated=\"right\">\n              <Icon name=\"github\"/> Visit on Github\n            </Button>\n          </Segment>\n          <Accordion fluid styled>\n            <Accordion.Title active={this.state.activeIndex === 0} index={0} onClick={this.handleClick}>\n              <Icon name='dropdown' />\n              Details\n            </Accordion.Title>\n            <Accordion.Content active={this.state.activeIndex === 0}>\n              <p>\n                Welcome to LiveTeX! This is an implementation of LaTeX's math mode, meant to be used to draft equations\n                or LaTeX equations for use in papers outside of LaTeX. It lacks the functionality of programs such as TeX Live or\n                sites like Overleaf, but in return offers live rendering and easy multi-line equation support.\n\n                Pending features include \"Copy to Clipboard\" and \"Save\" buttons, as well as shortcuts for often-used LaTeX commands.\n              </p>\n            </Accordion.Content>\n          </Accordion>\n          <Segment>\n            <Form>\n              <TextArea\n                rows={5}\n                placeholder=\"Type LaTeX here\"\n                value={this.state.text}\n                onChange={this.handleChange}\n              />\n            </Form>\n          </Segment>\n          <Segment>\n            <MathJax.Provider>\n              {this.state.formulas.map(function(list, index) {\n                return <Line key={list+\"-\"+index} formula={list}/>;\n              })}\n            </MathJax.Provider>\n          </Segment>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}